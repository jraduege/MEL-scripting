

{fn E3() {local h,i,c="",d="",f
h=getfield(PROB_LIST_CHANGES("delimited"),"|","")
for i=1, i<(size(h)+1), i=i+1
do
h[i]=getfield(h[i],"^","")
if sub(h[i][1],1,3)="ASS" then 
c=c+h[i][4]+"|"
d=d+h[i][3]+"|"
endif
endfor
MEL_ADD_ORDER("S","Office Visits/E&Ms","99213 - Office Visit, Level 3 - EST Pt**","",c,d,"","","",USER.LOGINNAME)
return ""}}{E3()}

{fn DS() { LOCAL wt mgkg mg v dv dt d res x
if getnargs()< 4 then return "error" endif
mgkg=getarg(1)
mg=getarg(2)
v=getarg(3)
dt=array("once daily","twice a day","three times a day","four times a day")
wt=(OBSANY("Weight")/2.2)
d=wt*mgkg
dv=getarg(4)
d=d/dv
d=(d*v/mg)
x=mod(d,1)*10
if d<5 then
if (x>0 and x<5) then
d=div(d,1)+0.5
else
if x>0 then
d=div(d,1)+1
endif
endif
else
if x>0 then
d=div(d,1)+1
endif
endif
res="take "+d+" mL by mouth "+dt[dv]
return res}}{DS(40,250,5,3)}

{fn AL(){local d=str(._TODAYSDATE)e="" r="Will try an albuterol inhaler.  Patient insturcted in propper inhaler technique."
if useryesno("Exp 1 month?")="Yes",e=ADDDATES(d,"0","1","0")
MEL_ADD_MEDICATION("PROAIR HFA","two inhalations every four to six hours as needed",d,"120696",e,"1","0")
if useryesno("Inst?")="Yes",MEL_ADD_ORDER("S","Other Tests and Procedures","94664 - Demo to Patient on Utilzation of MDI Inhaler**","","","","","","",USER.LOGINNAME),return r
r=r+"\n\n.mditeach"
return r}}{AL()}

{fn IM(){MEL_ADD_ORDER("S","Immunizations/Vaccines","90715 - Tdap Vaccine, 7-64 y/o**","","ICD-V06.1","Tdap","","","",USER.LOGINNAME)
return "Will update patient's tetanus today."}}{
fn P1(){if useryesno("Adacel?")="Yes", return IM(), return "Patient reports tetanus is up to date."}}{
fn DT(){local u="Patient's tetanus is up to date."
if match(LISTPROTOCOLSHORT(),"TD BOOSTER")>0,return P1()
if size(str(LASTOBSDATE("TD BOOSTER")))>0,return u
if useryesno("Adacel?")="Yes",return IM(),return u}}{DT()}

{fn S2(){local r="Will update immunizations today with Pediarix, Prevnar, HIB (4 dose schedule), and RotaTeq.",i="Immunizations/Vaccines"
MEL_ADD_ORDER("S",i,"90723 - Pediarix DTaP-IPV-HepB Vaccine**")
MEL_ADD_ORDER("S",i,"90669 - Pneumococcal Vaccine, under 5 yrs (PCV7)**")
MEL_ADD_ORDER("S",i,"90648 - Hib Vaccine, PRP-T**")
MEL_ADD_ORDER("S",i,"90680 - Rotavirus Vaccine, 6 weeks to 32 weeks, 3 doses**")
return r}}{S2()}

{fn S2(){local r="Will update immunizations today with Pediarix, Prevnar, HIB (4 dose schedule), and RotaTeq.",i="Immunizations/Vaccines"
MEL_ADD_ORDER("S",i,"90723 - Pediarix DTaP-IPV-HepB Vaccine**")
MEL_ADD_ORDER("S",i,"90670 - PCV13 Pneumococcal Vaccine, under 5 yrs (PCV13)**")
MEL_ADD_ORDER("S",i,"90648 - Hib Vaccine, PRP-T**")
MEL_ADD_ORDER("S",i,"90680 - Rotavirus Vaccine, 6 weeks to 32 weeks, 3 doses**")
return r}}{S2()}

{fn TIT_SCHED() {LOCAL s, i
s="\tDates\t\t\t\tAM\tnoon\tPM\n"
for i=1, i<16 , i=i+1
do
s=s+"\t"+sub(adddates(DATESTAMP(),"0","0",str(i)), 1, 5)
if i=3 then
s=s+"\t\t0\t0\t1\n"
endif
if i=6 then
s=s+"\t\t1\t0\t1\n"
endif
if i=9 then
s=s+"\t\t1\t1\t1\n"
endif
if i=12 then
s=s+"\t\t1\t1\t2\n"
endif
endfor
return s
}} {TIT_SCHED()}

{fn NTW() {LOCAL o,t,tn,n,x,y,z,h
n=getarg(1)
o=array("o","t","th","f","fi","s","se")
t=array("tn","ty","thy","fy","fiy","sy","sey")
tn=array("ev","tv","thn","fn","fin","sn","sen")
h=div(n,100)
if h>0 then
np=o[h]+" hundred"
endif
x=mod(n,100)
y=div(x,10)
z=mod(x,10)
if (x>10 and x<20) then
np = np+" "+tn[z]
return np
endif
if x<10 then
if z>0 then
np = np+" "+o[z]
return np
endif
endif
if x>19 then
np=np+" "+t[y]
endif
if z>0 then
np=np+"-"+o[z]
endif
return np 
}}{NTW(35)}

{fn NTW() {LOCAL o,t,tn,n,x,y,z,h
n=getarg(1)
o=array("o","t","th","f","fi","s","se")
t=array("tn","ty","thy","fy","fiy","sy","sey")
tn=array("ev","tv","thn","fn","fin","sn","sen")
h=div(n,100)
if h>0 then
np=o[h]+" hundred"
endif
x=mod(n,100)
y=div(x,10)
z=mod(x,10)
if (x>10 and x<20) then
np = np+" "+tn[z]
return np
endif
if x<10 then
if z>0 then
np = np+" "+o[z]
return np
endif
endif
if x>19 then
np=np+" "+t[y]
endif
if z>0 then
np=np+"-"+o[z]
endif
return np 
}}{NTW(35)}

{fn SC() {local d=str(._TODAYSDATE) e=ADDDATES(d,"0","1","0")
if useryesno("Add med?")="Yes",MEL_ADD_MEDICATION("ELIMITE","Apply from hairline to soles of feet before bed.  Wash off after eight to fourteen hours.",d,"7510",e,"60 g","0")
return ""}}{SC()}

{fn LAST_MED() {LOCAL list,i,med
list=getfield(MEDS_NEW('list'),"\r","")
med=getfield(list[(size(list)-1)]," ","")
return INITIALCAP(med[1]) 
}}

{fn P() {local c="ICD-V70.0",d="Health maint",o=" - Preventive Care, ",a=PATIENT_AGE(),e=" - EST Pt**",t=array("18-39 y/o","40-64 y/o","65+ yrs"),b="9939",n=array("5","6","7"),i=0
if useryesno("Est?")="No" then e=" - NEW Pt**"
b="9938"
endif
if PATIENT.SEX=="F" then
if useryesno("GYN?")="Yes" then
c=c+"|ICD-V72.31"
d=d+"|Routine GYN"
endif
endif
if (a<40),i=1,i=2
if (a>64),i=3
o=b+n[i]+o+t[i]+e
MEL_ADD_ORDER("S","Preventive Care/Counseling",o,"",c,d,"","","",USER.LOGINNAME)
return ""}}{P()} 

{fn W() {local o=" - Preventive Care, ",a=PATIENT_AGE(),e=" - EST Pt**",t=array("under 1 y/o","1-4 y/o","5-11 y/o","12-17 y/o"),b="9939",n=array("1","2","3","4"),i=0
if useryesno("Est?")="No" then e=" - NEW Pt**"
b="9938"
endif
if (a<1),i=1,i=2
if (a>4),i=3
if (a>11),i=4
o=b+n[i]+o+t[i]+e
MEL_ADD_ORDER("S","Preventive Care/Counseling",o,"","ICD-V20.2","Well Child","","","",USER.LOGINNAME)
return ""}}{W()} 

{fn O(){OBSANY(getarg(1))}}
{fn X(){local r="Patient smokes "
if O("CIGARET SMKG")=="yes", return r+O("SMOK HX PPD")+" packs per day."
if O("CIGAR USE")=="yes", return r+"cigars." 
if O("ORALTOBACUSE")=="yes", return "Patient uses chewing tobacco." 
userok("Not addressed")
return ""}}
{fn SM() {local s=O("SMOK STATUS")
if s=="never", return "Patient has never smoked."
if s=="quit", return "Patient quit smoking in "+O("SMOK YR Q")+"."
if s=="current", return X()
}}{SM()}

{fn HMN() {MEL_ADD_PROBLEM('DX OF','Health Maintenance','ICD-V70.0',str(._TODAYSDATE))
return ""}}{HMN()}

{fn F() {MEL_ADD_PROBLEM('DX OF','FATIGUE','ICD-780.79',str(._TODAYSDATE)) return ""}}{F()}

{fn EBP() {MEL_ADD_PROBLEM('DX OF','ELEVATED BLOOD PRESSURE WITHOUT DIAGNOSIS OF HYPERTENSION','ICD-796.2',str(._TODAYSDATE)) return "Will have the patient check blood pressure once a week over the next month.  If systolic readings are consistantly 140 or higher or diastolic readings are 90 or higher, the patient will come in and we will discuss starting medication.  Discussed that weight loss and regular exercise can help lower blood pressure."}}{EBP()}



{fn STD() {MEL_ADD_PROBLEM('MDXOF','Screening for venereal disease','ICD-V74.5',str(._TODAYSDATE),ADDDATES(str(._TODAYSDATE),"0","1","0")) return ""}}{STD()}

{fn BUNG() {return "xxx\a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z"}}{BUNG()}

 

{"Patient's most recent fasting lipid profile:\n\tTotal Cholesterol:\t"+OBSANY("CHOLESTEROL")+"\t(Goal < 200)\n\tTriglycerides:\t\t"+OBSANY("TRIGLYCERIDE")+"\t(Goal < 150)\n\tHDL (Good cholesterol):\t"+OBSANY("HDL")+"\t(Goal > 40)\n\tLDL (Bad cholesterol):\t"+OBSANY("LDL")+"\t(Goal < 100)"}

{fn CO(){local a=PATIENT_AGE()
if DURATIONDAYS(str(._TODAYSDATE),OBSANY("



{fn A(){local w=(OBSANY("Weight")/2.2)
if w>40,return 4
if w>23,return 3
if w>15,return 2
return 1}}
{fn T(){local d=array("1/2","3/4","1","1 and 1/4") s=" by mouth twice daily for five days" st="" b=str(._TODAYSDATE) e=ADDDATES(b,"0","0","5") id=array("131306","131305","131306","62113","69494") did=id[A()]
st=" one pill"+s
if A()=3,st=" two pills"+s
if useryesno("Liquid?")="Yes" then
st=d[A()]+" teaspoon"+s
did=id[5]
endif
MEL_ADD_MEDICATION("TAMIFLU",st,b,did,e,"qs 5d","0")
return ""}}{T()}

{fn R(){local a=PATIENT_AGE(),b=str(._TODAYSDATE),e="",o="5",c="two inhalations ",m="twice",p="Not approved for <",q="y/o. Continue?",s=""
if useryesno("Treatment?\n(no if prophylaxis)")="No" then
o="10"
m="once"
if a<5 then
if useryesno(p+"5"+q)="No" then return "" endif
endif
else
if a<7 then
if useryesno(p+"7"+q)="No" then return "" endif
endif
endif
s=c+m+" daily for "+o+" days."
e=ADDDATES(b,"0","0",o)
MEL_ADD_MEDICATION("RELENZA DISKHALER",s,b,"61119",e,"qs","0")
return s
}}{R()}

VITAMIN D
Please inform patient Vitamin D level is low.  A normal level is 30-100.  Recommend starting a daily dose of 1000 IU of Vitamin D2 or D3 in addition to taking 50,000 units of Vitamin D weekly for the next 8 weeks.  At the end of 8 weeks, the level will need to be rechecked.  A letter will be sent as a reminder to have that lab work completed.

Sent to recall desktop  
Ordering Provider:{PATIENT.RESPPROVID} 
Time to be done: 2 months
Lab: Vitamin D
ICD-9 code: 268.9
Visit to follow testing:
.addvitd
 
{MEL_ADD_MEDICATION("VITAMIN D","one capsule by mouth once weekly for 8 weeks",str(._TODAYSDATE),"23667",ADDDATES(str(._TODAYSDATE),"0","3","0"),"8","0")} 


{fn HELLO() {local x="Hello World."
if useryesno("Do it?")="Yes" then return x
else return "Goodbye"
endif }}

TAMIFLU DOSING
{fn ARR(){local weight=(OBSANY("Weight")/2.2)
if weight>40,return 4
if weight>23,return 3
if weight>15,return 2
return 1}
}{fn INF(){local age=PATIENT._AGEINMONTHS
if age<3,return 1
if age<6,return 2
return 3}
}{fn TAMI(){
local dose=array("1/2","3/4","1","1 and 1/4")
infdose=array("1","1.6","2")
age=PATIENT._AGEINMONTHS
sigbegin=" by mouth "
freq="twice"
sigmid=" daily for "
days=5
sigend=" days" 
fullsig="" 
quant=""
begindate=str(._TODAYSDATE) 
enddate=ADDDATES(b,"0","0","5") id=array("131306","131305","131306","62113","69494") 
ddid=id[ARR()]
if (age>=12) then
	if useryesno("For treatment?\n(select no for prophylaxis)")="No" then
		freq="once"
		days=10
	endif
	fullsig=" one pill"+sigbegin+freq+sigmid
	if ARR()=3 then 
		fullsig=" two pills"+sigbegin+freq+sigmid
	endif
	if useryesno("Liquid?")="Yes" then
		fullsig=dose[ARR()]+" teaspoon"+sigbegin+freq+sigmid
		ddid=id[5]
	endif
else
	ddid=id[5]
	fullsig=infdose[INF()]+" mL"+sigbegin+freq+sigmid
endif
fullsig=fullsig+days+sigend
quant="qs "+days+"d"
MEL_ADD_MEDICATION("TAMIFLU",fullsig,begindate,ddid,enddate,quant,"0")
return "Will start patient on Tamiflu"+fullsig}}{TAMI()}

----OB VISIT CHARGE (complete) -----
{fn OBV() {local h,i,c="",d="",f
h=getfield(PROB_AFTER("delimited"),"|","")
for i=1, i<(size(h)+1), i=i+1
do
h[i]=getfield(h[i],"^","")
if sub(h[i][3],5,3)="V22" then 
c=c+h[i][3]+"|"
d=d+h[i][2]+"|"
endif
if sub(h[i][3],5,3)="V23" then 
c=c+h[i][3]+"|"
d=d+h[i][2]+"|"
endif
endfor
MEL_ADD_ORDER("S","Office Visits/E&Ms","OB Visit","",c,d,"","","",USER.LOGINNAME)
return ""}}{OBV()}
----- end OB visit charge (complete) -----
{fn GEND() {
if getnargs()==1 then
if PATIENT.SEX == "M" then 
return "He"
endif
if PATIENT.SEX == "F" then 
return "She"
endif 
if PATIENT.SEX == "" then
return "Patient" 
endif
else
if PATIENT.SEX == "M" then 
return "he"
endif
if PATIENT.SEX == "F" then 
return "she"
endif 
if PATIENT.SEX == "" then
return "patient" 
endif
endif
}}

{fn GENDP() {
if getnargs()==1 then
if PATIENT.SEX == "M" then 
return "His"
endif
if PATIENT.SEX == "F" then 
return "Her"
endif 
if PATIENT.SEX == "" then
return "Patient's" 
endif
else
if PATIENT.SEX == "M" then 
return "his"
endif
if PATIENT.SEX == "F" then 
return "her"
endif 
if PATIENT.SEX == "" then
return "patient's" 
endif
endif
}} 

---NEXT SCHEDULED APT---

{fn F() {local d=str(._TODAYSDATE),c=getarg(1)
if c==d then 
if useryesno("Has patient been seen yet today?")="No" then return 1
endif
endif
return DURATIONDAYS(d,c)}}
{fn NA() {local i,h=getfield(APPTS_BY_STATUS("scheduled"),"\r","")
for i=2, i<(size(h)+1), i=i+1
do
if F(sub(h[i],3,10))>0 then return sub(h[i],3,10)
endif
endfor
userok("Patient has no scheduled appointments")
return ""}}


(this will give the date with no leading CR)

{fn APTBUNG() {local h=getfield(APPTS_BY_STATUS("scheduled")," ","")
userok(APPTS_BY_STATUS("scheduled"))
return sub(h[1],3,10)}}{APTBUNG()}

{fn APTBUNG() {local h=getfield(APPTS_BY_STATUS("scheduled")," ","")
userok(APPTS_BY_STATUS("scheduled"))
return size(h)}}{APTBUNG()}

returns the correct date but with a newline at the beginning
{fn F() {local d=str(._TODAYSDATE),c=getarg(1)
if c==d then 
if useryesno("Has patient been seen yet today?")="No" then return 1
endif
endif
return DURATIONDAYS(d,c)}}
{fn NA() {local i,h=getfield(APPTS_BY_STATUS("scheduled"),"\r","")
for i=2, i<(size(h)+1), i=i+1
do
if F(sub(h[i],2,10))>0 then return TEXTDATES(sub(h[i],2,10))
endif
endfor
userok("Patient has no scheduled appointments")
return ""}}{NA()}

{fn F() {local d=str(._TODAYSDATE),c=getarg(1)
if c==d then 
if useryesno("Has patient been seen yet today?")="No" then return 1
endif
endif
return DURATIONDAYS(d,c)}}
{fn NA() {local i,h=getfield(APPTS_BY_STATUS("scheduled"),"\r","")
for i=2, i<(size(h)+1), i=i+1
do
if F(sub(h[i],2,10))>0 then return sub(h[i],2,10)
endif
endfor
userok("Patient has no scheduled appointments")
return ""}}{NA()}


----- Flu shot orders by insurance --------

{fn INS_BUNG() {userok(INS_PLAN("P"))
return ""}}{INS_BUNG()}


---too big----
{fn F(){local n,o,s,i=1,j=1,c="Immunizations/Vaccines",p=USER.LOGINNAME,a=PATIENT._AGEINMONTHS
n=array("Essence (3384)","CHPW - M (3257)","Group He (789)","Medicare","Regence (2935)","Sierra O (3138)")
o=array("90471 - Imm Admin, 1st vaccine **","G0008 - Admin Influenza Vaccine-Medicare**")
s=array("90656 - Flu Vaccine, PRESERVATIVE FREE, OLDER than 36 months**","90658 - Flu Vaccine, older than 3 y/o**","90655 - Flu Vaccine, PRESERVATIVE FREE, 6 months-35 months**")
if match(n,INS_PLAN("P"))>0, i=2
if a<228,j=2
if a<36,j=3
MEL_ADD_ORDER("S",c,o[i],"","","","","",p)
MEL_ADD_ORDER("S",c,s[j],"","","","","",p)
return ""}}{F()}
---too big---

{fn FA() {local n,o,i=1
n=array("Essence  (3384)","CHPW - M (3257)","Group He (789)","Regence  (2935)","Sierra O (3138)")
o=array("90471 - Imm Admin, 1st vaccine **","G0008 - Admin Influenza Vaccine-Medicare**")
if match(n,INS_PLAN("P"))>0,i=2
if match(INS_PLAN("P"),1,"Medicare")>0,i=2
MEL_ADD_ORDER("S","Immunizations/Vaccines",o[i],"","","","","",USER.LOGINNAME)
return ""}}{FA()}

{fn F(){local s,j=1,a=PATIENT._AGEINMONTHS
s=array("90656 - Flu Vaccine, PRESERVATIVE FREE, OLDER than 36 months**","90658 - Flu Vaccine, older than 3 y/o**","90655 - Flu Vaccine, PRESERVATIVE FREE, 6 months-35 months**")
if a<228,j=2
if a<36,j=3
if a<6 then
userok("Patient younger than 6 month flu shot not ordered")
return ""
endif
MEL_ADD_ORDER("S","Immunizations/Vaccines",s[j],"","","","","",USER.LOGINNAME)
return ".fluadmin"}}{F()}

{userok(ORD_BY_STATUS("C"))}

----  problems assessed in last six months  (in progress) -----

Start with problem list
	arrange as 2 dimensional array
for each problem do list assessment
	select elements of prob type, diagnosis desc, and ICD-9 code from prob array
	output into array as delimited list
look at date of most recent assessment
	should be a predictable element of array
compare date to see if this occured at an office visit? - need surrogate obs term (?CHIEF CMPLNT?) - LIST_OBS
remove problems from array that have a recent assessment
return the remainder of the array 


{fn A() {local h,i
h=getfield(PROB_AFTER("delimited"),"|","")
for i=1, i<(size(h)+1), i=i+1
do
h[i]=getfield(h[i],"^","")
endfor
return h}}{fn B() {local ar,r
ar=A()
for j=1, j<(size(ar)+1), j=j+1
do
r=LIST_ASSESSMENTS(ar[j][1],ar[j][2],ar[j][3],"delimited")
userok(r)
endfor
return ""}}{B()}

{fn A() {local h,i
h=getfield(PROB_AFTER("delimited"),"|","")
for i=1, i<(size(h)+1), i=i+1
do
h[i]=getfield(h[i],"^","")
endfor
return h}}{fn B() {local ar,r
ar=A()
for j=1, j<(size(ar)+1), j=j+1
do
r=getfield(LIST_ASSESSMENTS(ar[j][1],ar[j][2],ar[j][3],"delimited"),"^","")
userok(str(r,"\n"))
endfor
return ""}}{B()}

---- end 6 month problems (in progress) ---- 

-----cryo ak with order (complete) -------
 
{fn O() {local n=getarg(1),p=getarg(2)
MEL_ADD_ORDER("S","Procedures - Dermatology","1700"+n+" - Destruction premalignant lesions/actinic keratoses; "+p+"**","","ICD-702.0","Actinic kerratosis","","","",USER.LOGINNAME)}}
{fn C() {O("0","1st lesion")
O("3","2-14 lesions, EACH")
return ""}}{C()}

{fn C() {MEL_ADD_ORDER("S","Procedures - Dermatology","17000 - Destruction premalignant lesions/actinic keratoses; 1st lesion**","","ICD-702.0","Actinic kerratosis","","","",USER.LOGINNAME)
return "PROCEDURE NOTE (CRYOTHERAPY):\nRisks benefits and alternatives of cryotherapy discussed with the patient. Verbal informed consent was obtained. Lesion was frozen times two with liquid nitrogen.  After-care instructions were discussed. Patient will return if the lesion does not completely resolve."}}{C()}

-----end cryo ak with order (complete) -----

-----wart cryo order (complete) ------
**detect dx but too big**
{fn C() {local h,i,c="",d="",f,p="17110 - Destruction warts/benign lesions; up to 14 lesions**",x=" - Destruction of lesion(s), "
h=getfield(PROB_AFTER("delimited"),"|","")
for i=1,i<(size(h)+1),i=i+1
do
h[i]=getfield(h[i],"^","")
if sub(h[i][3],5,3)="078" then
if useryesno(h[i][2])="Yes" then
c=c+h[i][3]
d=d+h[i][2]
endif
endif
endfor
if sub(d,5,6)="078.11" then
if PATIENT.SEX == "M",p="54056"+x+"penis, simple; cryosurgery**",p="56501"+x+"vulva; simple**"
endif
MEL_ADD_ORDER("S","Procedures - Dermatology",p,"",c,d,"","","",USER.LOGINNAME)
return ""}}{C()}
**too big**
{fn C() {local c="0",d="Wart,viral",p="17110 - Destruction warts/benign lesions; up to 14 lesions**",y="Dermatology"
if useryesno("Genital?")="Yes" then
c="1"
d="Genital wart"
y="Misc"
if PATIENT.SEX == "M" then
p="54056 - Destruction of lesion(s), penis, simple; cryosurgery**"
else p="56501 - Destruction of lesion(s), vulva; simple**"
endif
endif
MEL_ADD_ORDER("S","Procedures - "+y,p,"","ICD-078.1"+c,d,"","","",USER.LOGINNAME)
return ""}}{C()}

------end wart cryo order (complete)-----

------ age sensitive .pls------- 

{fn P() {local a=PATIENT_AGE()
if (a<16),return "Please let the patient's parents know that",return "Please let the patient know that"}}{P()}

----- end age sensitive.pls -----

----- diabetes labs (unfinished) -----
A1c (HGBA1C) - min q 6 mon, q3 if not to goal
fasting lipid profile (LDL) - min q 12 mon, q 3 if not to goal
urine microalbumin (MICROALB/CRE)- q 12 months
CMP (CREATININE) - q 6 mon

***pulls all values and dates correctly***
{fn D() {local a=array(LASTOBSVALUE("HGBA1C"),LASTOBSDATE("HGBA1C")),l=array(LASTOBSVALUE("LDL"),LASTOBSDATE("LDL")),u=array(LASTOBSVALUE("MICROALB/CRE"),LASTOBSDATE("MICROALB/CRE")),c=array(LASTOBSVALUE("CREATININE"),LASTOBSDATE("CREATININE"))
userok(str(a)+"\n"+str(l)+"\n"+str(u)+"\n"+str(c))
return ""}}{D()}

{fn P() {local t=getarg(1),x=getarg(2)
return DURATIONDAYS(t,ADDDATES(str(._TODAYSDATE),"0",x,"0"))}}
{fn D() {local r="",a=array(LASTOBSVALUE("HGBA1C"),LASTOBSDATE("HGBA1C")),l=array(LASTOBSVALUE("LDL"),LASTOBSDATE("LDL")),u=array(LASTOBSVALUE("MICROALB/CRE"),LASTOBSDATE("MICROALB/CRE")),c=array(LASTOBSVALUE("CREATININE"),LASTOBSDATE("CREATININE")),x=3
if P(a[2],3)>170,r=r+"A1c, "
if P(l[2],3)>350,r=r+"FLP, "
if P(u[2],3)>350,r=r+"microalbumin, "
if P(c[2],3)>170,r=r+"CMP"
return r}}{D()}

----- diabetic labs (unfinished) -----

----- idiot-proof + vitD (complete) -----

{fn F() {MEL_ADD_PROBLEM('DX OF','VITAMIN D DEFICIENCY','ICD-268.9',str(._TODAYSDATE)) return ".vitdtest"}}{F()}  

{fn F() {local h,i
h=getfield(PROB_AFTER("delimited"),"|","")
for i=1, i<(size(h)+1), i=i+1
do
h[i]=getfield(h[i],"^","")
if sub(h[i][3],5,5)="268.9" then 
return ".vitdrep"
endif
endfor
MEL_ADD_PROBLEM('DX OF','VITAMIN D DEFICIENCY','ICD-268.9',str(._TODAYSDATE)) return ".vitdrep"}}{F()} 

----- idiot-proof + vitD (complete) ----

------find DDID (complete) -----

{fn D() {local h,i,c=""
h=getfield(MEDS_AFTER("delimited"),"|","")
for i=1, i<(size(h)+1), i=i+1
do
h[i]=getfield(h[i],"^","")
c=c+h[i][1]+" "+h[i][3]+"\n"
endfor
userok(str(c))
return ""}}{D()}

-----find DDID (complete) -----

-----eRx order-----

{fn R() {
if match(INS_PLAN("P"),1,"Medicare")>0 then
MEL_ADD_ORDER("S","Reports/Forms/Legal Srvcs/Copies","G8553 - 1 or more prescriptions transmitted by eRx system"
,"","","","","",USER.LOGINNAME)
endif
return ""
}}{R()}

-----eRx order-----
 
-----visit summary-----
{fn V() {local h,i,d="",f
h=getfield(PROB_LIST_CHANGES("delimited"),"|","")
for i=1, i<(size(h)+1), i=i+1
do
h[i]=getfield(h[i],"^","")
if sub(h[i][1],1,3)="ASS" then 
d=d+INITIALCAP(h[i][3])+" - \n\n"
endif
endfor
return "Today at your visit we discussed the following:\n"+d}}{V()}

-----visit summary-----
